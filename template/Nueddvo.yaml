AWSTemplateFormatVersion: '2010-09-09'
Description: 'Task Definition for ECS Fargate with Seeker and dynamic nginx.conf update.'

Parameters:
  Imagencontainer:
    Default: '258840583819.dkr.ecr.us-west-2.amazonaws.com/seeker:3.1'
    Type: String
    Description: Used to resolve image of container.    

Resources:
  ECSTaskExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: ECSFargateTaskExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:GetAuthorizationToken
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: '*'

  ECSTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: 'SeekerTask'
      Cpu: '4096'
      Memory: '16384'
      EphemeralStorage:
        SizeInGiB: 40
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      RuntimePlatform:
        OperatingSystemFamily: LINUX
        CpuArchitecture: X86_64

      Volumes:
        - Name: seekerEFS
          EfsVolumeConfiguration:
            FileSystemId: !ImportValue SeekerEFSFileSystemId
            AuthorizationConfig:
              AccessPointId: !ImportValue SeekerEFSAccessPointId
              Iam: ENABLED
            RootDirectory: "/"  # Montamos toda la raíz de EFS
            TransitEncryption: ENABLED

      ContainerDefinitions:
        - Name: seeker
          Image: !Ref Imagencontainer
          Essential: true
          MountPoints:
            - SourceVolume: seekerEFS
              ContainerPath: /home/seeker

          Command:
            - /bin/bash
            - "-c"
            - |
              set -e
              echo "Configurando nginx.conf con certificados TLS..."
              sed -i 's|ssl_certificate .*|ssl_certificate /home/seeker/certs/seeker.crt;|' /home/seeker/server/conf/nginx.conf
              sed -i 's|ssl_certificate_key .*|ssl_certificate_key /home/seeker/certs/seeker.key;|' /home/seeker/server/conf/nginx.conf
              echo "Iniciando Seeker Server..."
              /home/seeker/install/sk_ctl start
              tail -f /dev/null

          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
            - ContainerPort: 8443
              Protocol: tcp

          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: '/ecs/logs-seeker'
              awslogs-stream-prefix: 'logs-seeker'
              awslogs-region: !Ref 'AWS::Region'

Outputs:
  TaskDefinitionArn:
    Description: 'ARN de la definición de tarea de ECS'
    Value: !Ref ECSTaskDefinition
    Export:
      Name: SeekerTaskDefinitionArn




      ------------------------------------
      Command:
  - /bin/bash
  - "-c"
  - |
    set -e
    echo "Configurando nginx.conf con certificados TLS y soporte para proxy_protocol..."

    # Reemplaza certificados
    sed -i 's|ssl_certificate .*|ssl_certificate /home/seeker/certs/seeker.crt;|' /home/seeker/server/conf/nginx.conf
    sed -i 's|ssl_certificate_key .*|ssl_certificate_key /home/seeker/certs/seeker.key;|' /home/seeker/server/conf/nginx.conf

    # Ajusta proxy_protocol y server_name en el bloque del puerto 8443
    sed -i 's|listen 8443 ssl;|listen 8443 ssl proxy_protocol;|' /home/seeker/server/conf/nginx.conf
    sed -i '/listen 8443 ssl proxy_protocol;/a real_ip_header proxy_protocol;\nset_real_ip_from 0.0.0.0/0;\nserver_name seeker.tunel.pribafo;' /home/seeker/server/conf/nginx.conf

    echo "Iniciando Seeker Server..."
    /home/seeker/install/sk_ctl start

    tail -f /dev/null
